// <auto-generated />
using System;
using BussinessObject.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BussinessObject.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BussinessObject.Models.Account", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentityCardNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Accounts");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Account");
                });

            modelBuilder.Entity("BussinessObject.Models.ElectricityCost", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AppliedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("ElectricityCosts");
                });

            modelBuilder.Entity("BussinessObject.Models.History", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("ResidentId")
                        .HasColumnType("bigint");

                    b.Property<long?>("RoomId")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ResidentId");

                    b.HasIndex("RoomId");

                    b.ToTable("Histories");
                });

            modelBuilder.Entity("BussinessObject.Models.Invoice", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ElectricityConsumptionEnd")
                        .HasColumnType("int");

                    b.Property<int>("ElectricityConsumptionStart")
                        .HasColumnType("int");

                    b.Property<long>("ElectricityCostId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiredDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PaidDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("ResidentId")
                        .HasColumnType("bigint");

                    b.Property<long>("RoomId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("WaterConsumptionEnd")
                        .HasColumnType("int");

                    b.Property<int>("WaterConsumptionStart")
                        .HasColumnType("int");

                    b.Property<long>("WaterCostId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ElectricityCostId");

                    b.HasIndex("ResidentId");

                    b.HasIndex("RoomId");

                    b.HasIndex("WaterCostId");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("BussinessObject.Models.MotelChain", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("ManagerId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MotelChains");
                });

            modelBuilder.Entity("BussinessObject.Models.Room", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FeeAppliedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("MotelId")
                        .HasColumnType("bigint");

                    b.Property<long>("RentFee")
                        .HasColumnType("bigint");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MotelId");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("BussinessObject.Models.WaterCost", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AppliedDate")
                        .HasColumnType("datetime2");

                    b.Property<long>("Price")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("WaterCosts");
                });

            modelBuilder.Entity("BussinessObject.Models.Manager", b =>
                {
                    b.HasBaseType("BussinessObject.Models.Account");

                    b.HasDiscriminator().HasValue("Manager");
                });

            modelBuilder.Entity("BussinessObject.Models.Resident", b =>
                {
                    b.HasBaseType("BussinessObject.Models.Account");

                    b.HasDiscriminator().HasValue("Resident");
                });

            modelBuilder.Entity("BussinessObject.Models.History", b =>
                {
                    b.HasOne("BussinessObject.Models.Resident", "Resident")
                        .WithMany("Histories")
                        .HasForeignKey("ResidentId");

                    b.HasOne("BussinessObject.Models.Room", "Room")
                        .WithMany("Histories")
                        .HasForeignKey("RoomId");

                    b.Navigation("Resident");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("BussinessObject.Models.Invoice", b =>
                {
                    b.HasOne("BussinessObject.Models.ElectricityCost", "ElectricityCost")
                        .WithMany("Invoices")
                        .HasForeignKey("ElectricityCostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BussinessObject.Models.Resident", "Resident")
                        .WithMany("Invoices")
                        .HasForeignKey("ResidentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BussinessObject.Models.Room", "Room")
                        .WithMany("Invoices")
                        .HasForeignKey("RoomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BussinessObject.Models.WaterCost", "WaterCost")
                        .WithMany("Invoices")
                        .HasForeignKey("WaterCostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ElectricityCost");

                    b.Navigation("Resident");

                    b.Navigation("Room");

                    b.Navigation("WaterCost");
                });

            modelBuilder.Entity("BussinessObject.Models.MotelChain", b =>
                {
                    b.HasOne("BussinessObject.Models.Manager", "Manager")
                        .WithOne("MotelChain")
                        .HasForeignKey("BussinessObject.Models.MotelChain", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Manager");
                });

            modelBuilder.Entity("BussinessObject.Models.Room", b =>
                {
                    b.HasOne("BussinessObject.Models.MotelChain", "MotelChain")
                        .WithMany("Rooms")
                        .HasForeignKey("MotelId");

                    b.Navigation("MotelChain");
                });

            modelBuilder.Entity("BussinessObject.Models.ElectricityCost", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("BussinessObject.Models.MotelChain", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("BussinessObject.Models.Room", b =>
                {
                    b.Navigation("Histories");

                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("BussinessObject.Models.WaterCost", b =>
                {
                    b.Navigation("Invoices");
                });

            modelBuilder.Entity("BussinessObject.Models.Manager", b =>
                {
                    b.Navigation("MotelChain");
                });

            modelBuilder.Entity("BussinessObject.Models.Resident", b =>
                {
                    b.Navigation("Histories");

                    b.Navigation("Invoices");
                });
#pragma warning restore 612, 618
        }
    }
}
